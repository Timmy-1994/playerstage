plugins {
	id 'org.springframework.boot' version '2.5.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "org.flywaydb.enterprise.flyway" version "8.0.0-beta3"

}

group = 'com.playerstage'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

springBoot {
    mainClass = 'com.playerstage.playerstage.PlayerstageApplication'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
	implementation 'net.sf.json-lib:json-lib:2.4:jdk15'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	implementation 'org.mybatis.generator:mybatis-generator-core:1.4.0'
	implementation 'org.mybatis.dynamic-sql:mybatis-dynamic-sql:1.2.1'
}

def props = new Properties()
// use ./gradlew -Dspring.profile.active="" to assign env
def env = System.getProperty("spring.profiles.active")
file("./src/main/resources/application${env?"-"+env:""}.properties").withInputStream { props.load(it) }

tasks.register("mbgenerator", JavaExec) {
	classpath sourceSets.main.runtimeClasspath
	main "com.playerstage.playerstage.mybatisGen.MybatisGenerator"
}

test {
	useJUnitPlatform()
}

flyway {
	url = props["spring.datasource.url"]
    user = props["spring.datasource.username"]
    password = props["spring.datasource.password"]
	locations = [
		"filesystem:/database/migration"
	]
}